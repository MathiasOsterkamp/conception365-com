<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>eslint on Mathias Osterkamp</title><link>https://conception365.com/tags/eslint/</link><description>Recent content in eslint on Mathias Osterkamp</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://conception365.com/tags/eslint/index.xml" rel="self" type="application/rss+xml"/><item><title>SPFX 2019 eslint and prettier</title><link>https://conception365.com/post/2021-04-22-spfx-2019-prettier-eslint/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://conception365.com/post/2021-04-22-spfx-2019-prettier-eslint/</guid><description>SPFX 2019 eslint and prettier For our current projects we used tslint and suffered for some problems. First main concern was, that VSCode was not able to give full feedback about code problems. Later on execution of gulp build all errors where thrown. Furthermore we got some conflicts with prettier solution and it was a hell to understand the current used rules from tslint. Also the tslint performance was very awful.</description></item></channel></rss>