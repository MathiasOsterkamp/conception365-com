<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SP2019 on Mathias Osterkamp</title><link>https://conception365.com/tags/sp2019/</link><description>Recent content in SP2019 on Mathias Osterkamp</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://conception365.com/tags/sp2019/index.xml" rel="self" type="application/rss+xml"/><item><title>SPFX 2019 eslint and prettier</title><link>https://conception365.com/post/2021-04-22-spfx-2019-prettier-eslint/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://conception365.com/post/2021-04-22-spfx-2019-prettier-eslint/</guid><description>SPFX 2019 eslint and prettier For our current projects we used tslint and suffered for some problems. First main concern was, that VSCode was not able to give full feedback about code problems. Later on execution of gulp build all errors where thrown. Furthermore we got some conflicts with prettier solution and it was a hell to understand the current used rules from tslint. Also the tslint performance was very awful.</description></item><item><title>Remove Managed Metadata Orphaned Terms</title><link>https://conception365.com/post/2021-02-11-orphaned-terms/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>https://conception365.com/post/2021-02-11-orphaned-terms/</guid><description>Remove Managed Metadata Orphaned Terms Problem In some cases you like to get rid of orphaned terms. Terms mostly get orphaned, if you reuse terms and delete the original instances. There is a very good explanation from Mike Morawski how this could happen.
Not long ago I was working away with the term store though Powershell. I had to remove all of a particular group’s termsets and to do this I ended up calling the Group’s delete function.</description></item><item><title>Managed Metadata Migration</title><link>https://conception365.com/post/2020-12-12-managed-metadata-migration/</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><guid>https://conception365.com/post/2020-12-12-managed-metadata-migration/</guid><description>Managed Metadata Migration Managed metadata is a formal taxonomy classification system. A taxonomy groups the words, labels, and terms that describe something, and then arranges the groups into a hierarchy. You can learn more basics and wordings on microsoft docs. Mostly it is simple called term store.
Where are my data stored? The first common question for migration is, where actual the term store data are stored. The short answer is, everything important is stored in Managed Metadata SQL Database of the service application.</description></item></channel></rss>